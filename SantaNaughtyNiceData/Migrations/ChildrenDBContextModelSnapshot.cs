// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SantaNaughtyNiceData;

#nullable disable

namespace SantaNaughtyNiceData.Migrations
{
    [DbContext(typeof(ChildrenDBContext))]
    partial class ChildrenDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SantaNaughtyNiceData.Models.Activities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("activities");
                });

            modelBuilder.Entity("SantaNaughtyNiceData.Models.Children", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Historical_ANNS")
                        .HasColumnType("int");

                    b.Property<int>("House_Number")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Yearly_ANNS")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("children");
                });

            modelBuilder.Entity("SantaNaughtyNiceData.Models.ChildsHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivityID")
                        .HasColumnType("int");

                    b.Property<int>("ChildID")
                        .HasColumnType("int");

                    b.Property<int?>("ChildrenId")
                        .HasColumnType("int");

                    b.Property<int>("DeltaANNS")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChildrenId");

                    b.ToTable("childsHistory");
                });

            modelBuilder.Entity("SantaNaughtyNiceData.Models.ChildsHistory", b =>
                {
                    b.HasOne("SantaNaughtyNiceData.Models.Children", null)
                        .WithMany("ChildHistory")
                        .HasForeignKey("ChildrenId");
                });

            modelBuilder.Entity("SantaNaughtyNiceData.Models.Children", b =>
                {
                    b.Navigation("ChildHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
